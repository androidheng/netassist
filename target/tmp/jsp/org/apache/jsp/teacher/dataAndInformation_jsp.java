/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.16.v20190411
 * Generated at: 2019-04-20 11:06:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.teacher;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dataAndInformation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
    _jspx_dependants.put("file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1555218603255L));
    _jspx_dependants.put("/teacher/../common.jsp", Long.valueOf(1555570279237L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write(" \n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/layui.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/view.css\"/>\r\n");
      out.write("    <script src=\"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("    <link rel=\"icon\" href=\"/favicon.ico\">\r\n");
      out.write("    <title>管理后台</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"layui-view-body\">\r\n");
      out.write("     <div class=\"layui-content\" id=\"box\" style=\"display:none\">\r\n");
      out.write("          <form  method=\"post\" enctype=\"multipart/form-data\" style=\"padding:20px;\" action=\"");
      out.print(basePath);
      out.write("material/add\" onsubmit=\"return toVaild()\">\r\n");
      out.write("                <input type=\"text\" id=\"title\" name=\"title\" lay-verify=\"required\" autocomplete=\"off\" placeholder=\"请输入标题\" class=\"layui-input\">  \r\n");
      out.write("                <input type=\"file\" id=\"img\" name=\"files\" lay-verify=\"required\"  class=\"layui-input\">\r\n");
      out.write("                <input type=\"file\" id=\"file\" name=\"files\" lay-verify=\"required\"  class=\"layui-input\">\r\n");
      out.write("                <textarea placeholder=\"请输入简介内容\" id=\"introduction\"  lay-verify=\"required\" name=\"introduction\" class=\"layui-textarea\"></textarea>\r\n");
      out.write("           <div >\r\n");
      out.write("             <button class=\"layui-btn layui-btn-sm\"  type=\"submit\">提交</button>\r\n");
      out.write("           </div>\r\n");
      out.write("      </form>\r\n");
      out.write("     </div>\r\n");
      out.write("    <div class=\"layui-content\">\r\n");
      out.write("        <div class=\"layui-page-header\">\r\n");
      out.write("            <div class=\"pagewrap\">\r\n");
      out.write("                <span class=\"layui-breadcrumb\">\r\n");
      out.write("                  <a>首页</a>\r\n");
      out.write("                  <a>站长信息</a>\r\n");
      out.write("                </span>\r\n");
      out.write("                <h2 class=\"title\">资料信息</h2>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-row\">\r\n");
      out.write("            <div class=\"layui-card\">\r\n");
      out.write("                <div class=\"layui-card-body\">\r\n");
      out.write("                    <div class=\"form-box\">\r\n");
      out.write("                        <table id=\"demo\" lay-filter=\"demo\" ></table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("   </div>\r\n");
      out.write("    <script src=\"https://heerey525.github.io/layui-v2.4.3/layui-v2.4.5/layui.js\"></script>\r\n");
      out.write("     <script type=\"text/html\" id=\"toolbarDemo\">\r\n");
      out.write("     <div class=\"layui-btn-container\">\r\n");
      out.write("        <button class=\"layui-btn layui-btn-sm\" lay-event=\"add\">添加资料</button>\r\n");
      out.write("     </div>\r\n");
      out.write("    </script>\r\n");
      out.write("    <script type=\"text/html\" id=\"barDemo\">\r\n");
      out.write("      \r\n");
      out.write("       <a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\">删除</a>\r\n");
      out.write("    </script>\r\n");
      out.write("   \r\n");
      out.write("    <script>\r\n");
      out.write("    function toVaild(){\r\n");
      out.write("    \tvar title = document.getElementById(\"title\").value;\r\n");
      out.write("        var file = document.getElementById(\"files\").value;\r\n");
      out.write("        var img = document.getElementById(\"img\").value;\r\n");
      out.write("        var introduction = document.getElementById(\"introduction\").value;\r\n");
      out.write("        if(!title||!file||!img||!introduction){\r\n");
      out.write("        \t alert('请完善信息')\r\n");
      out.write("        \t return false\r\n");
      out.write("        }\r\n");
      out.write("        return true          \r\n");
      out.write("    \t                 \r\n");
      out.write("    }\r\n");
      out.write("   \r\n");
      out.write("    layui.use('table', function(){\r\n");
      out.write("    \r\n");
      out.write("     var table = layui.table,form = layui.form,$=layui.$;\r\n");
      out.write("       //展示已知数据\r\n");
      out.write("       table.render({\r\n");
      out.write("           elem: '#demo'\r\n");
      out.write("          ,toolbar: '#toolbarDemo'\r\n");
      out.write("          ,url:'");
      out.print(basePath);
      out.write("material/search'\r\n");
      out.write("          ,cols: [[ //标题栏\r\n");
      out.write("             {field: 'title', title: '资料标题', }\r\n");
      out.write("            ,{field: 'teachername', title: '老师'}\r\n");
      out.write("            ,{field: 'introduction', title: '资料简介'}\r\n");
      out.write("            ,{field: 'cratetime', title: '创建时间'}\r\n");
      out.write("            ,{fixed: 'right', title:'操作', toolbar: '#barDemo', width:150}\r\n");
      out.write("         ]]\r\n");
      out.write("        ,skin: 'line' //表格风格\r\n");
      out.write("        ,even: true\r\n");
      out.write("        ,page: true //是否显示分页\r\n");
      out.write("        ,limits: [5, 7, 10]\r\n");
      out.write("        ,limit: 5 //每页默认显示的数量\r\n");
      out.write("       });\r\n");
      out.write("       \r\n");
      out.write("    \r\n");
      out.write("       //打开添加站点弹窗\r\n");
      out.write("       function getCitys(data){\r\n");
      out.write("    \t   layer.open({\r\n");
      out.write("  \t         type: 1\r\n");
      out.write("  \t        ,title: false //不显示标题栏\r\n");
      out.write("  \t        ,closeBtn: true\r\n");
      out.write("  \t        ,area: ['600px','400px']\r\n");
      out.write("  \t        ,shade: 0.8\r\n");
      out.write("  \t        ,id: 'LAY_layuipro' //设定一个id，防止重复弹出\r\n");
      out.write("  \t        ,btnAlign: 'c'\r\n");
      out.write("  \t        ,moveType: 1 //拖拽模式，0或者1\r\n");
      out.write("  \t        ,content: $(\"#box\"),\r\n");
      out.write("  \t        success:function(){\r\n");
      out.write("  \t        \t\r\n");
      out.write("  \t        \t\r\n");
      out.write("  \t        }\r\n");
      out.write("  \t       ,end:function(index){\r\n");
      out.write("  \t        \tlayer.close(index)\r\n");
      out.write("  \t        }\r\n");
      out.write("  \t      });\r\n");
      out.write("  \t   \r\n");
      out.write("       }\r\n");
      out.write("       //头工具栏事件\r\n");
      out.write("       table.on('toolbar(demo)', function(obj){\r\n");
      out.write("         switch(obj.event){\r\n");
      out.write("           case 'add':\r\n");
      out.write("             getCitys()\r\n");
      out.write("           break;\r\n");
      out.write("         \r\n");
      out.write("         };\r\n");
      out.write("       });\r\n");
      out.write("       //监听行工具事件\r\n");
      out.write("       table.on('tool(demo)', function(obj){\r\n");
      out.write("         var data = obj.data;\r\n");
      out.write("         //console.log(obj)\r\n");
      out.write("         if(obj.event === 'del'){\r\n");
      out.write("           layer.confirm('真的删除行么', function(index){\r\n");
      out.write("        \t  $.ajax({\r\n");
      out.write("                   url:\"");
      out.print(basePath);
      out.write("material/delete\",\r\n");
      out.write("                   type:'post',//method请求方式，get或者post\r\n");
      out.write("                   dataType:'json',//预期服务器返回的数据类型\r\n");
      out.write("                   data:JSON.stringify({id:data.id}),\r\n");
      out.write("                   contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("                   success:function(res){//res为相应体,function为回调函数\r\n");
      out.write("                \t   obj.del();\r\n");
      out.write("                       layer.close(index);\r\n");
      out.write("                       $(\".layui-laypage-btn\")[0].click();\r\n");
      out.write("                    \r\n");
      out.write("                   },\r\n");
      out.write("                   error:function(){\r\n");
      out.write("                       layer.alert('操作失败！！！',{icon:5});\r\n");
      out.write("                   }\r\n");
      out.write("                 });\r\n");
      out.write("           \r\n");
      out.write("           });\r\n");
      out.write("         } \r\n");
      out.write("       });\r\n");
      out.write("     \r\n");
      out.write("});\r\n");
      out.write("   </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
