/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.16.v20190411
 * Generated at: 2019-04-19 07:00:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.student;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
    _jspx_dependants.put("file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1555313481377L));
    _jspx_dependants.put("/student/../common.jsp", Long.valueOf(1555570279237L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write(" \n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("  \n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/view.css\"/>\n");
      out.write("     <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/layui.css\">\n");
      out.write("    <script src=\"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js\"></script>\n");
      out.write("    <title></title>\n");
      out.write("</head>\n");
      out.write("<body class=\"layui-view-body\">\n");
      out.write("    <div class=\"panel-body laery-seo-box\">\n");
      out.write("       \n");
      out.write("        <div class=\"layui-form\" style=\"padding:10px 0px;background:#fff;margin-top:50px;\"></form>\n");
      out.write("            <div class=\"layui-form-item\">\n");
      out.write("              <label class=\"layui-form-label\">时间</label>\n");
      out.write("              <div class=\"layui-input-block\">\n");
      out.write("                 <input type=\"text\" class=\"layui-input\" id=\"test1\" placeholder=\"yyyy-MM-dd\">\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("           \n");
      out.write("            <div class=\"layui-form-item\">\n");
      out.write("              <label class=\"layui-form-label\">站长所属站点</label>\n");
      out.write("              <div class=\"layui-input-block\">\n");
      out.write("                   <select name=\"cid\" id=\"cid\" lay-verify=\"city\" lay-filter=\"cityList\">\n");
      out.write("                    \n");
      out.write("                  </select>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"layui-form-item\">\n");
      out.write("              <label class=\"layui-form-label\"></label>\n");
      out.write("              <div class=\"layui-input-block\">\n");
      out.write("                <button class=\"layui-btn layui-btn-warm\" id=\"btn\">查询</button>\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("             \n");
      out.write("        </div>\t\n");
      out.write("        \n");
      out.write("        <div class=\"larry-seo-stats\" id=\"larry-seo-stats\" style=\"width:100%;height:600px\"></div>\n");
      out.write("  </div>\n");
      out.write("     <script src=\"https://heerey525.github.io/layui-v2.4.3/layui-v2.4.5/layui.js\"></script>\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.print(basePath);
      out.write("assets/echarts.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("    layui.use('laydate', function(){\n");
      out.write("    \t  var laydate = layui.laydate;\n");
      out.write("    \t  //常规用法\n");
      out.write("    \t  laydate.render({\n");
      out.write("    \t    elem: '#test1'\n");
      out.write("    \t  });\n");
      out.write("    });\n");
      out.write("   \n");
      out.write("     var myChart = echarts.init(document.getElementById('larry-seo-stats'));\n");
      out.write("        option = {\n");
      out.write("        title: {\n");
      out.write("        text: '空气统计折现图'\n");
      out.write("    },\n");
      out.write("    tooltip: {\n");
      out.write("        trigger: 'axis'\n");
      out.write("    },\n");
      out.write("    legend: {\n");
      out.write("        data:[]\n");
      out.write("    },\n");
      out.write("    grid: {\n");
      out.write("        left: '3%',\n");
      out.write("        right: '4%',\n");
      out.write("        bottom: '3%',\n");
      out.write("        containLabel: true\n");
      out.write("    },\n");
      out.write("    toolbox: {\n");
      out.write("       \n");
      out.write("    },\n");
      out.write("    xAxis: {\n");
      out.write("        type: 'category',\n");
      out.write("        boundaryGap: false,\n");
      out.write("        data: []\n");
      out.write("    },\n");
      out.write("    yAxis: {\n");
      out.write("        type: 'value'\n");
      out.write("    },\n");
      out.write("    series: [\n");
      out.write("       \n");
      out.write("    ]\n");
      out.write("};      \n");
      out.write("        getoption()\n");
      out.write("        getData()\n");
      out.write("      $(document).on('click','#btn',function(){\n");
      out.write("    \t    getData()\n");
      out.write("      });\n");
      out.write("      \n");
      out.write("     //重新渲染表单\n");
      out.write("     function renderForm(){\n");
      out.write("          layui.use('form', function(){\n");
      out.write("             var form = layui.form;//高版本建议把括号去掉，有的低版本，需要加()\n");
      out.write("             form.render();\n");
      out.write("          });\n");
      out.write("      } \n");
      out.write("     function getoption(){\n");
      out.write("\t    $.ajax({\n");
      out.write("           url:\"");
      out.print(basePath);
      out.write("city/findAll\",\n");
      out.write("           type:'post',//method请求方式，get或者post\n");
      out.write("           dataType:'json',//预期服务器返回的数据类型\n");
      out.write("           contentType: \"application/json; charset=utf-8\",\n");
      out.write("           success:function(res){//res为相应体,function为回调函数\n");
      out.write("          \t   let options = \"<option value=''></option>\"\n");
      out.write("               res.forEach(item=>{\n");
      out.write("              \t options+=\"<option value='\" + item.id + \"'>\" + item.city + \"</option>\";\n");
      out.write("               })\n");
      out.write("              \n");
      out.write("               $(\"#cid\").append(options)\n");
      out.write("               \n");
      out.write("              \n");
      out.write("               renderForm()\n");
      out.write("           },\n");
      out.write("           error:function(){\n");
      out.write("            \n");
      out.write("           }\n");
      out.write("         });\n");
      out.write("    }\n");
      out.write("        function getData(){\n");
      out.write("        \t let dates = $(\"#test1\").val()||'2019-04-15'\n");
      out.write("        \t $.ajax({\n");
      out.write("                   url:\"");
      out.print(basePath);
      out.write("data/searchHistory?dates=\"+dates,\n");
      out.write("                   type:'post',//method请求方式，get或者post\n");
      out.write("                   dataType:'json',//预期服务器返回的数据类型\n");
      out.write("                  \n");
      out.write("                   contentType: \"application/json; charset=utf-8\",\n");
      out.write("                   success:function(res){//res为相应体,function为回调函数\n");
      out.write("                \t   option.xAxis.data = res.data\n");
      out.write("                \t   option.series = res.series\n");
      out.write("                \t   myChart.setOption(option);\n");
      out.write("                    \n");
      out.write("                   },\n");
      out.write("                   error:function(){\n");
      out.write("                     \n");
      out.write("                   }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
