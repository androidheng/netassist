/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.16.v20190411
 * Generated at: 2019-04-21 09:54:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
    _jspx_dependants.put("file:/D:/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1555218603255L));
    _jspx_dependants.put("/common.jsp", Long.valueOf(1555570279237L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write(" \n");
      out.write("<base href=\"");
      out.print(basePath);
      out.write("\">\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(basePath );
      out.write("js/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html >\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n");
      out.write("\n");
      out.write("    <title>计算机网络</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/amazeui.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("css/ee.css\">\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("swiper-master/dist/amazeui.swiper.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(basePath);
      out.write("assets/css/amazeui.min.css\">\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("      .dataImformation{\n");
      out.write("        width:1000px;\n");
      out.write("        margin:auto;\n");
      out.write("        display:flex;\n");
      out.write("      }\n");
      out.write("      .dataImformation li{\n");
      out.write("         padding:80px;\n");
      out.write("         box-sizing:border-box;\n");
      out.write("         flex:1;\n");
      out.write("        \n");
      out.write("      }\n");
      out.write("       .dataImformation li>div{\n");
      out.write("          border:2px solid #999;\n");
      out.write("          padding-bottom:5px;\n");
      out.write("       }\n");
      out.write("      .dataImformation li img{\n");
      out.write("        width:345px;\n");
      out.write("        height:350px;\n");
      out.write("      }\n");
      out.write("       .dataImformation li p{\n");
      out.write("         padding:0 5px;\n");
      out.write("        width:345px;\n");
      out.write("        white-space:normal;\n");
      out.write("      }\n");
      out.write("      .dataImformation li a{\n");
      out.write("         display:inline-block;\n");
      out.write("         width:100px;\n");
      out.write("         line-height:30px;\n");
      out.write("         text-align:center;\n");
      out.write("         border-radius:15px;\n");
      out.write("         background:#999;\n");
      out.write("      }\n");
      out.write("      .goUpload{\n");
      out.write("        width:100%;\n");
      out.write("        text-align:center;\n");
      out.write("      }\n");
      out.write("    \n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("assets/js/jquery-3.2.1.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("assets/js/amazeui.min.js\"></script>\n");
      out.write("    <div class=\"am-g\">\n");
      out.write("      <div class=\"am-u-sm-4 am-text-right\" >\n");
      out.write("        <br>\n");
      out.write("       <img src=\"");
      out.print(basePath);
      out.write("images/dingbu.png\" >\n");
      out.write("      </div>\n");
      out.write("      <div class=\"am-u-sm-8 am-text-center am-u-end\" >\n");
      out.write("        <br>\n");
      out.write("        <img src=\"");
      out.print(basePath);
      out.write("images/dinbu.jpg\" >\n");
      out.write("      </div>\n");
      out.write("  \n");
      out.write("    </div>\n");
      out.write("    <div class=\"nav\">\n");
      out.write("        \n");
      out.write("        <ul>\n");
      out.write("          <li><a href=\"SHouYe.html\">首页</a>\n");
      out.write("          </li>\n");
      out.write("          <li><a href=\"#A1\">参考手册</a>\n");
      out.write("\n");
      out.write("          <li><a href=\"#A2\">学生成果展示</a></li>\n");
      out.write("          <li><a href=\"#A3\">导师风采</a></li>\n");
      out.write("          <li><a href=\"#\">联系我们</a></li>\n");
      out.write("          <li><a href=\"");
      out.print(basePath);
      out.write("login.jsp\">登录</a></li>\n");
      out.write("        </ul>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"am-g\">\n");
      out.write("          <div class=\"am-u-sm-12 am-text-right\">\n");
      out.write("              <div class=\"am-slider am-slider-default\" data-am-flexslider=\"{playAfterPaused: 8000}\">\n");
      out.write("                  <ul class=\"am-slides\">\n");
      out.write("              <li>\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images捕获.PNG\">\n");
      out.write("                 \n");
      out.write("              </li>\n");
      out.write("              <li>\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images捕获2.PNG\">\n");
      out.write("                 \n");
      out.write("              </li>\n");
      out.write("              <li>\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images捕获3.PNG\">\n");
      out.write("                 \n");
      out.write("              </li>\n");
      out.write("          </ul>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("      </div>\n");
      out.write("    \n");
      out.write("          <div class=\"am-g\" >\n");
      out.write("              <div class=\"am-u-sm-12 am-text-right \">\n");
      out.write("                <div class=\"ad\" >\n");
      out.write("                   <a name=\"A1\">参考手册</a> \n");
      out.write("                </div>\n");
      out.write("              </div>\n");
      out.write("          \n");
      out.write("            </div>\n");
      out.write("<br>\n");
      out.write("<ul class=\"dataImformation\" id=\"dataImformation\">\n");
      out.write("    <li v-for=\"item in data\">\n");
      out.write("        <div>\n");
      out.write("           <img :src=\"item.logo\" >\n");
      out.write("           <p>{{item.introduction}}学生成果展示学生成果展示学生成果展示学生成果展示学生成果展示学生成果展示学生成果展示学生成果展示</p>\n");
      out.write("           <div class=\"goUpload\">\n");
      out.write("              <a :href=\"item.url\">去下载</a>\n");
      out.write("           </div>\n");
      out.write("          \n");
      out.write("        </div>\n");
      out.write("    </li>\n");
      out.write("    \n");
      out.write("</ul>\n");
      out.write("\n");
      out.write("<div class=\"am-g\" >\n");
      out.write("    <div class=\"am-u-sm-12 am-text-right \">\n");
      out.write("      <div class=\"ac\" >\n");
      out.write("         <a name=\"A2\">学生成果展示</a> \n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("<div class=\"am-g\">\n");
      out.write("  <div class=\"am-u-sm-3\">\n");
      out.write("   <div class=\"responsive\">\n");
      out.write("    <div class=\"img\">\n");
      out.write("      <a target=\"_blank\" href=\"#\">\n");
      out.write("        <img src=\"");
      out.print(basePath);
      out.write("images/实验1.jpg\" alt=\"图片文本描述\" width=\"500\" height=\"200\">\n");
      out.write("      </a>\n");
      out.write("      <div class=\"desc\">为网络接口配置IP地址、子网掩码、默认网关、DNS服务器IP地址信息。开始配置时与第1部查看的结果是一致的，然后分别试着调整IP地址、子网掩码、默认网关、DNS服务器IP地址信息，观察可能带来些什么问题。\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"am-u-sm-3\">\n");
      out.write("   <div class=\"responsive\">\n");
      out.write("    <div class=\"img\">\n");
      out.write("      <a target=\"_blank\" href=\"#\">\n");
      out.write("        <img src=\"");
      out.print(basePath);
      out.write("images/实验2.jpg\" alt=\"图片文本描述\" width=\"500\" height=\"200\">\n");
      out.write("      </a>\n");
      out.write("      <div class=\"desc\">启动Ethereal分组俘获器。开始Ethereal分组俘获。\n");
      out.write("          在浏览器的地址栏中输入下URL,你的浏览器中将显示一个具有五行的非常简单的HTML文件。\n");
      out.write("          在你的浏览器中重新输入相同的URL或单击浏览器中的“刷新”按钮。\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"am-u-sm-3\">\n");
      out.write("  <div class=\"responsive\">\n");
      out.write("    <div class=\"img\">\n");
      out.write("      <a target=\"_blank\" href=\"#\">\n");
      out.write("        <img src=\"");
      out.print(basePath);
      out.write("images/实验3.jpg\" alt=\"图片文本描述\" width=\"500\" height=\"200\">\n");
      out.write("      </a>\n");
      out.write("      <div class=\"desc\">实现一个能够在局域网中进行点对点聊天的实用程序。\n");
      out.write("\n");
      out.write("         熟悉c++、Java等高级编程语言网络编程的基本操作。\n");
      out.write("          \n");
      out.write("          基本了解对话框应用程序的编写过程。 实现TCP套接字编程。</div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"am-u-sm-2 am-u-end\" >\n");
      out.write("  <div class=\"responsive\">\n");
      out.write("    <div class=\"img\">\n");
      out.write("      <a target=\"_blank\" href=\"#\">\n");
      out.write("        <img src=\"");
      out.print(basePath);
      out.write("images/实验4.jpg\" alt=\"图片文本描述\" width=\"500\" height=\"200\">\n");
      out.write("      </a>\n");
      out.write("      <div class=\"desc\">通过路由器交换机连接真机进行校园局域网的测试。只需要用一根网线，一头连接到第一个路由器的LAN，网线的另一头连接到交换机上即可，电脑用网线连接到交换机上其他接口。         </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("<div class=\"af\">\n");
      out.write("\n");
      out.write("\n");
      out.write("  <div class=\"am-g\" >\n");
      out.write("      <div class=\"am-u-sm-12 am-text-right \">\n");
      out.write("        <div class=\"ae\" >\n");
      out.write("           <a name=\"A3\">导师风采</a> \n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("  \n");
      out.write("    </div>\n");
      out.write("  \n");
      out.write("  <br>\n");
      out.write("  <div id=\"tutor\">\n");
      out.write("\n");
      out.write("      <div class=\"am-container\" style=\"margin-top:12px; margin-right: 25%;\">\n");
      out.write("        <div class=\"swiper-container \" id=\"tutor-swiper\">\n");
      out.write("          <div class=\"swiper-wrapper\">\n");
      out.write("            <div class=\"swiper-slide\">\n");
      out.write("              <div class=\"slide-room\">\n");
      out.write("                <div class=\"ellipse\">\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("imagestubiao.png\" width=\"90px\" style=\" position: absolute; top:20px; left: 35px;\">\n");
      out.write("\n");
      out.write("                  <div class=\"ma\">王则林</div>\n");
      out.write("                  <div class=\"ma-a\">\n");
      out.write("                    <h>职称：副教授</h><br>\n");
      out.write("                    <h>研究领域：智能算法、</h><br>\n");
      out.write("                    <h>网络安全</h><br>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"swiper-slide\">\n");
      out.write("              <div class=\"slide-room\">\n");
      out.write("                <div class=\"ellipse\">\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images/tubiao.png\" width=\"90px\" style=\" position: absolute; top:20px; left: 35px;\">\n");
      out.write("                  <div class=\"ma\">马海英</div>\n");
      out.write("                  <div class=\"ma-a\">\n");
      out.write("                    <h>职称：副教授</h><br>\n");
      out.write("                    <h>研究领域介绍：\n");
      out.write("                        物联网安全</h><br>\n");
      out.write("                    <h>大数据隐私保护</h><br>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"swiper-slide\">\n");
      out.write("              <div class=\"slide-room\">\n");
      out.write("                <div class=\"ellipse\">\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images/tubiao.png\" width=\"90px\" style=\" position: absolute; top:20px; left: 35px;\">\n");
      out.write("                  <div class=\"ma\">曹利</div>\n");
      out.write("                  <div class=\"ma-a\">\n");
      out.write("                    <h>职称：副教授</h><br>\n");
      out.write("                    <h>研究领域介绍：\n");
      out.write("                        加密技术研究</h><br>\n");
      out.write("                    <h>无线网的安全认证机制</h><br>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"swiper-slide\">\n");
      out.write("              <div class=\"slide-room\">\n");
      out.write("                <div class=\"ellipse\">\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images/tubiao.png\" width=\"90px\" style=\" position: absolute; top:20px; left: 35px;\">\n");
      out.write("                  <div class=\"ma\">王进</div>\n");
      out.write("                  <div class=\"ma-a\">\n");
      out.write("                    <h>职称：副教授</h><br>\n");
      out.write("                    <h>研究领域介绍：物联网智能控制</h><br>\n");
      out.write("                    <h>推荐系统</h><br>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"swiper-slide\">\n");
      out.write("              <div class=\"slide-room\">\n");
      out.write("                <div class=\"ellipse\">\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images/tubiao.png\" width=\"90px\" style=\" position: absolute; top:20px; left: 35px;\">\n");
      out.write("\n");
      out.write("                  <div class=\"ma\">陆培军</div>\n");
      out.write("                  <div class=\"ma-a\">\n");
      out.write("                    <h>职称：副教授</h><br>\n");
      out.write("                    <h>研究领域介绍：大数据与机器学习</h><br>\n");
      out.write("                    <h>WEB大数据挖掘</h><br>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"swiper-slide\">\n");
      out.write("              <div class=\"slide-room\">\n");
      out.write("                <div class=\"ellipse\">\n");
      out.write("                  <img src=\"");
      out.print(basePath);
      out.write("images/tubiao.png\" width=\"90px\" style=\" position: absolute; top:20px; left: 35px;\">\n");
      out.write("\n");
      out.write("                  <div class=\"ma\">王春明</div>\n");
      out.write("                  <div class=\"ma-a\">\n");
      out.write("                    <h>职称：副教授</h><br>\n");
      out.write("                    <h>研究领域介绍：物联网工程技术及应用</h><br>\n");
      out.write("                    <h>计算机软件开发</h><br>\n");
      out.write("\n");
      out.write("                  </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("              </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("          </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"fa\">\n");
      out.write("        <div class=\"am-g\">\n");
      out.write("          <div class=\"am-u-sm-3 \">\n");
      out.write("    \n");
      out.write("            <br>\n");
      out.write("    \n");
      out.write("            <br>\n");
      out.write("    \n");
      out.write("          </div>\n");
      out.write("          <div class=\"am-u-sm-2\">\n");
      out.write("            <br>\n");
      out.write("            <br>\n");
      out.write("            <br>\n");
      out.write("            <div class=\"fa-a\">\n");
      out.write("              <h>学生问题：</h>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              <br>\n");
      out.write("              \n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("    \n");
      out.write("            \n");
      out.write("          </div>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("         \n");
      out.write("          <div class=\"am-u-sm-2 am-u-end\">\n");
      out.write("    \n");
      out.write("    \n");
      out.write("            <div class=\"fa-a-k \">\n");
      out.write("              <h>在线提问\n");
      out.write("              </h>\n");
      out.write("            </div>\n");
      out.write("    \n");
      out.write("            <input id=\"userName\" type=\"text\" placeholder=\"请输入您的姓名\"  name=\"name\" class=\"fa-c\">\n");
      out.write("            <br>\n");
      out.write("            <input id=\"userPhone\" type=\"text\" placeholder=\"请输入您的电话\"  name=\"number\" class=\"fa-c\" />\n");
      out.write("            <br>\n");
      out.write("            <textarea id=\"qustion\" placeholder=\"请输入您的问题\" cols=\"50\" rows=\"5\" class=\"fa-d\"></textarea>\n");
      out.write("    \n");
      out.write("            <a ><button onclick=\"upload()\" class=\"fa-c-g\">提交</button></a>\n");
      out.write("    \n");
      out.write("    \n");
      out.write("          </div>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("          <br>\n");
      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("assets/js/jquery-1.11.0.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.print(basePath);
      out.write("swiper-master/dist/amazeui.swiper.min.js\"></script>\n");
      out.write("    <script src=\"https://cdn.bootcss.com/vue/2.6.10/vue.min.js\"></script>\n");
      out.write("  <script>\n");
      out.write("\n");
      out.write("        $(function () {\n");
      out.write("        \t\n");
      out.write("          var a = 4\n");
      out.write("          var b = 5\n");
      out.write("          if (window.screen.width < 500) {\n");
      out.write("            // window.screen.width 返回当前屏幕宽度(分辨率值) \n");
      out.write("            a = 1\n");
      out.write("            b = 1\n");
      out.write("          }\n");
      out.write("          console.log(a, b)\n");
      out.write("          $('#tutor-swiper').swiper({\n");
      out.write("            pagination: '#tutor-swiper .swiper-pagination',\n");
      out.write("            // 分页器\n");
      out.write("            slidesPerView: b,\n");
      out.write("            loop: true,\n");
      out.write("            loopedSlides: 6,\n");
      out.write("            // 旋转模式下，设置slider’s容器能够同时显示的slides数量。\n");
      out.write("            // 另外，支持’auto’值，会根据容器container的宽度调整slides数目。\n");
      out.write("            // ‘auto’不兼容loop模式.\n");
      out.write("            // 使用loop和looped slides之后不会左右轮播，会向左不停轮播你插入的照片。\n");
      out.write("            paginationClickable: true,\n");
      out.write("            // 此参数设置为true时，点击分页器的指示点分页器会控制Swiper切换\n");
      out.write("            spaceBetween: 1,\n");
      out.write("            // slide之间的距离（单位px）。\n");
      out.write("            nextButton: '.swiper-button-next',\n");
      out.write("            prevButton: '.swiper-button-prev',\n");
      out.write("            keyboardControl: true,\n");
      out.write("            // 是否开启键盘控制Swiper切换。设置为true时，能使用键盘方向键控制slide滑动\n");
      out.write("            autoplay: 1000,\n");
      out.write("            // 轮播图的时间。\n");
      out.write("          });\n");
      out.write("\n");
      out.write("\n");
      out.write("          $('#mySwiper').swiper({\n");
      out.write("\n");
      out.write("            slidesPerView: a,\n");
      out.write("            paginationClickable: true,\n");
      out.write("            spaceBetween: 30,\n");
      out.write("            nextButton: '.swiper-button-next',\n");
      out.write("            prevButton: '.swiper-button-prev',\n");
      out.write("            keyboardControl: true,\n");
      out.write("            autoplay: 3000\n");
      out.write("\n");
      out.write("          });\n");
      out.write("         \n");
      out.write("        });\n");
      out.write("        function upload(){\n");
      out.write("        \tlet userName = $(\"#userName\").val();\n");
      out.write("        \tlet userPhone = $(\"#userPhone\").val();\n");
      out.write("        \tlet qustion = $(\"#qustion\").val();\n");
      out.write("        \tlet parames = {\n");
      out.write("        \t\t\tuserName : userName,\t\n");
      out.write("        \t\t\tuserPhone : userPhone,\t\n");
      out.write("        \t\t\tqustion : qustion,\t\n");
      out.write("        \t}\n");
      out.write("      \t    if(!userName||!userPhone||!qustion) return alert('请完善信息');\n");
      out.write("      \t    $.ajax({\n");
      out.write("                url:\"");
      out.print(basePath);
      out.write("question/add\",\n");
      out.write("                type:'post',//method请求方式，get或者post\n");
      out.write("                dataType:'json',//预期服务器返回的数据类型\n");
      out.write("                data:JSON.stringify(parames),\n");
      out.write("                contentType: \"application/json; charset=utf-8\",\n");
      out.write("                success:function(res){//res为相应体,function为回调函数\n");
      out.write("                   alert('操作成功')\n");
      out.write("                 \n");
      out.write("                },\n");
      out.write("                error:function(){\n");
      out.write("                    alert('操作失败！！！');\n");
      out.write("                }\n");
      out.write("              });\n");
      out.write("      \t   \n");
      out.write("        }\n");
      out.write("        let vm = new Vue({\n");
      out.write("        \tel:'#dataImformation',\n");
      out.write("        \tdata(){\n");
      out.write("        \t\treturn {\n");
      out.write("        \t\t\tdata:[]\n");
      out.write("        \t\t}\n");
      out.write("        \t},\n");
      out.write("        \tmounted(){\n");
      out.write("        \t\t let self = this\n");
      out.write("        \t\t $.ajax({\n");
      out.write("                     url:\"");
      out.print(basePath);
      out.write("material/findAll\",\n");
      out.write("                     type:'post',//method请求方式，get或者post\n");
      out.write("                     dataType:'json',//预期服务器返回的数据类型\n");
      out.write("                   \n");
      out.write("                     contentType: \"application/json; charset=utf-8\",\n");
      out.write("                     success:function(res){//res为相应体,function为回调函数\n");
      out.write("                    \t\n");
      out.write("                  \t    self.data = res\n");
      out.write("                  \t    \n");
      out.write("                  \t    console.log(self.data)\n");
      out.write("                     },\n");
      out.write("                     error:function(){\n");
      out.write("                      \n");
      out.write("                     }\n");
      out.write("                   });\n");
      out.write("        \t}\n");
      out.write("        })\n");
      out.write("        getData()\t\n");
      out.write("        //获取资料信息\n");
      out.write("        function getData(){\n");
      out.write("        \t \n");
      out.write("        }\n");
      out.write("  </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
